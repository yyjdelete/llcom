<Page
    x:Class="llcom.Pages.DataShowPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:local="clr-namespace:llcom.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="DataShowPage"
    adonisExtensions:RippleExtension.FadeInDuration="0"
    adonisExtensions:RippleExtension.FadeOutDuration="0"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Loaded="Page_Loaded"
    mc:Ignorable="d">
    <Page.Resources>
        <local:boolVisibe x:Key="boolVisibeConverter" />
        <local:boolNotVisibe x:Key="boolNotVisibeConverter" />
        <local:showHexFormat x:Key="showHexFormatConverter" />
    </Page.Resources>
    <Grid x:Name="mainGrid" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <FlowDocumentScrollViewer
            Name="uartDataFlowDocument"
            MinZoom="50"
            VerticalScrollBarVisibility="Visible">
            <!--  更改段落间距  -->
            <FlowDocumentScrollViewer.Resources>
                <Style TargetType="{x:Type Paragraph}">
                    <Setter Property="Margin" Value="0" />
                </Style>
            </FlowDocumentScrollViewer.Resources>
            <!--  更改段落间距END  -->
            <FlowDocument
                FontFamily="Consolas,Microsoft YaHei,微软雅黑"
                FontSize="12"
                IsOptimalParagraphEnabled="False"
                TextAlignment="Left" />
        </FlowDocumentScrollViewer>
        <StackPanel
            Grid.Row="1"
            Margin="10,0,0,3"
            HorizontalAlignment="Left"
            VerticalAlignment="Bottom"
            Orientation="Horizontal"
            Visibility="{Binding Path=IsMouseOver, ElementName=mainGrid, Converter={StaticResource boolVisibeConverter}}">
            <CheckBox
                Name="RTSCheckBox"
                Margin="5,0,0,0"
                Content="RTS"
                IsChecked="{Binding Rts}" />
            <CheckBox
                Name="DTRCheckBox"
                Margin="5,0,0,0"
                Content="DTR"
                IsChecked="{Binding Dtr}" />
            <CheckBox
                Name="HEXBox"
                Margin="5,0,0,0"
                Content="{DynamicResource ShowHexFormat}"
                IsChecked="{Binding showHexFormat, Converter={StaticResource showHexFormatConverter}}"
                IsThreeState="True"
                ToolTip="{DynamicResource ShowHexFormatTip}" />
            <CheckBox
                Name="HexSendCheckBox"
                Margin="5,0,0,0"
                Content="{DynamicResource HexSendMode}"
                IsChecked="{Binding hexSend}" />
            <CheckBox
                Name="ExtraEnterCheckBox"
                Margin="5,0,0,0"
                Content="{DynamicResource AddExtraEnter}"
                IsChecked="{Binding extraEnter}"
                ToolTip="{DynamicResource AddExtraEnterTip}" />
            <CheckBox
                Name="EnableSymbolCheckBox"
                Margin="5,0,0,0"
                Content="{DynamicResource ShowSymbol}"
                IsChecked="{Binding EnableSymbol}"
                ToolTip="{DynamicResource ShowSymbolTooltip}" />
            <CheckBox
                Name="DisableLogCheckBox"
                Margin="5,0,0,0"
                Content="{DynamicResource DisableLog}"
                IsChecked="{Binding DisableLog}" />
        </StackPanel>
        <Button
            Name="LockLogButton"
            Margin="0,0,18,20"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Click="LockLogButton_Click"
            ToolTip="{DynamicResource LockLogButton}"
            Visibility="{Binding Path=IsMouseOver, ElementName=mainGrid, Converter={StaticResource boolVisibeConverter}}">
            <StackPanel>
                <fa:FontAwesome
                    Name="LockIcon"
                    Icon="Lock"
                    Visibility="{Binding LockLog, Converter={StaticResource boolNotVisibeConverter}}" />
                <fa:FontAwesome
                    Name="UnLockIcon"
                    Foreground="Green"
                    Icon="Unlock"
                    Visibility="{Binding LockLog, Converter={StaticResource boolVisibeConverter}}" />
                <TextBlock
                    Name="UnLockText"
                    Text="{DynamicResource LockLogText}"
                    Visibility="{Binding LockLog, Converter={StaticResource boolVisibeConverter}}" />
            </StackPanel>
        </Button>
    </Grid>
</Page>
